% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_finite_filters.R, R/print.R
\name{finite_filters}
\alias{finite_filters}
\alias{*,finite_filters,moving_average-method}
\alias{*,moving_average,finite_filters-method}
\alias{*,finite_filters,numeric-method}
\alias{*,ANY,finite_filters-method}
\alias{*,finite_filters,ANY-method}
\alias{+,numeric,finite_filters-method}
\alias{+,finite_filters,moving_average-method}
\alias{+,moving_average,finite_filters-method}
\alias{+,finite_filters,missing-method}
\alias{-,finite_filters,missing-method}
\alias{-,finite_filters,moving_average-method}
\alias{-,moving_average,finite_filters-method}
\alias{-,finite_filters,numeric-method}
\alias{-,numeric,finite_filters-method}
\alias{/,finite_filters,numeric-method}
\alias{*,finite_filters,finite_filters-method}
\alias{show,finite_filters-method}
\title{Manipulating Finite Filters}
\usage{
finite_filters(
  sfilter,
  rfilters = NULL,
  lfilters = NULL,
  first_to_last = FALSE
)

\S4method{*}{finite_filters,moving_average}(e1, e2)

\S4method{*}{moving_average,finite_filters}(e1, e2)

\S4method{*}{finite_filters,numeric}(e1, e2)

\S4method{*}{ANY,finite_filters}(e1, e2)

\S4method{*}{finite_filters,ANY}(e1, e2)

\S4method{+}{numeric,finite_filters}(e1, e2)

\S4method{+}{finite_filters,moving_average}(e1, e2)

\S4method{+}{moving_average,finite_filters}(e1, e2)

\S4method{+}{finite_filters,missing}(e1, e2)

\S4method{-}{finite_filters,missing}(e1, e2)

\S4method{-}{finite_filters,moving_average}(e1, e2)

\S4method{-}{moving_average,finite_filters}(e1, e2)

\S4method{-}{finite_filters,numeric}(e1, e2)

\S4method{-}{numeric,finite_filters}(e1, e2)

\S4method{/}{finite_filters,numeric}(e1, e2)

\S4method{*}{finite_filters,finite_filters}(e1, e2)

\S4method{show}{finite_filters}(object)
}
\arguments{
\item{sfilter}{the symmetric filter or a \verb{"FiniteFilter} object.}

\item{rfilters}{the right filters (used on the last points).}

\item{lfilters}{the left filters (used on the first points).}

\item{first_to_last}{boolean indicating if the first element of \code{rfilters} is the
first asymmetric filter (when only one observation is missing) or the last one (real-time estimates).}
}
\description{
Manipulating Finite Filters
}
\examples{
ff_lp = finite_filters(lp_filter())
ff_simple_ma = finite_filters(moving_average(c(1, 1, 1), lags = -1)/3,
               rfilters = list(moving_average(c(1, 1), lags = -1)/2))
ff_lp
ff_simple_ma
ff_lp * ff_simple_ma

}
