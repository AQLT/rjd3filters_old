% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/implicit_forecast.R
\name{implicit_forecast}
\alias{implicit_forecast}
\title{Retrieve implicit forecasts corresponding to the asymmetric filters}
\usage{
implicit_forecast(y, coefs)
}
\arguments{
\item{y}{a univariate or multivariate time series.}

\item{coefs}{a \code{matrix} or a \code{list} that contains all the coefficients of the asymmetric and symmetric filters.
(from the symmetric filter to the shortest). See details.}
}
\description{
Function to retrieve the implicit forecasts corresponding to the asymmetric filters
}
\details{
Let \eqn{h} be the bandwidth of the symmetric filter,
\eqn{v_{-h}, \ldots, v_h} the coefficients of the symmetric filter and
\eqn{w_{-h}^q, \ldots, w_h^q} the coefficients of the asymmetric filter used to estimate
the trend when \eqn{q} future values are known (with the convention \eqn{w_{q+1}^q=\ldots=w_h^q=0}).
Let denote \eqn{y_{-h},\ldots, y_0} the las \eqn{h} available values of the input times series.
The implicit forecasts, \eqn{y_{1}*,\ldots, y_h*} solve:
\deqn{
\forall q, \quad \sum_{i=-h}^0 v_iy_i + \sum_{i=1}^h v_iy_i*
=\sum_{i=-h}^0 w_i^qy_i + \sum_{i=1}^h w_i^qy_i*
}
which is equivalent to
\deqn{
\forall q, sum_{i=1}^h (v_i- w_i^q) y_i*
=\sum_{i=-h}^0 (w_i^q-v_i)y_i.
}
Note that this is solved numerically: the solution isn't exact.
}
\examples{
y <- retailsa$AllOtherGenMerchandiseStores
ql <- lp_filter(horizon = 6, kernel = "Henderson", endpoints = "QL")$filters.coef
lc <- lp_filter(horizon = 6, kernel = "Henderson", endpoints = "LC")$filters.coef
f_ql <- implicit_forecast(y, ql)
f_lc <- implicit_forecast(y, lc)

plot(window(y, start = 2007),
     xlim = c(2007,2012))
lines(ts(c(tail(y,1), f_ql), frequency = frequency(y), start = end(y)),
      col = "red", lty = 2)
lines(ts(c(tail(y,1), f_lc), frequency = frequency(y), start = end(y)),
      col = "blue", lty = 2)
}
